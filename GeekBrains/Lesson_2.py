########################################################################################################################

# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list = [12, None, True, 1.2, 'string', [1, 3, 4], ('red', 14, 'm'), {'Anna': 50, 34: 'Moscow'}, set('множество')]
for i in my_list:
    print(type(i))


########################################################################################################################


# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.

user_input = input('Введите значения: ')
my_list = list(user_input)
for i in range(1, len(my_list), 2):
    my_list[i - 1], my_list[i] = my_list[i], my_list[i - 1]
print(f'{my_list}')


########################################################################################################################

# # 3. Пользователь вводит месяц в виде целого числа от 1 до 12. С
# # ообщить к какому времени года относится месяц (зима, весна, лето, осень).
# # Напишите решения через list и через dict.

user_input = int(input('Введите число соответствующее месяцу: '))
month_dict = {12: 'winter', 1: 'winter', 2: 'winter',
              3: 'spring', 4: 'spring', 5: 'spring',
              6: 'summer', 7: 'summer', 8: 'summer',
              9: 'autumn', 10: 'autumn', 11: 'autumn'}
for key, season in month_dict.items():
    if user_input == key:
        print(key, '-', season)
        break
else:
    print('Вы ввели не верное значение:', user_input)


########################################################################################################################


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

user_input = input('Введите слова через прбел: ')
my_list = user_input.split()

for numb, el in enumerate(my_list, 1):
    print(numb, el[:10])


########################################################################################################################


# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением
# должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

my_list = [7, 5, 3, 3, 2]
print(f'Текущий рейтинг: - {my_list}')

while True:
    try:
        user_input = int(input('Введите число: '))
    except ValueError:
        print('Вы ввели неверное значение')
        break
    for idx, el in enumerate(my_list, 1):
        if user_input > el:
            my_list.insert(idx, user_input)
            break
        elif user_input <= my_list[-1]:
            my_list.append(user_input)
            break
    print(my_list)

########################################################################################################################


# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара:
# название, цена, количество, единица измерения). Структуру нужно сформировать программно, т.е. запрашивать
# все данные у пользователя.
# Пример готовой структуры:
#
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
