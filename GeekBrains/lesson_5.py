######################################################################################################################

# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.

with open("my_file.txt", "a", encoding="UTF-8") as my_file:
    while True:
        user_input = input("Введите строку: ")
        print(f'{user_input}', file=my_file)
        if not user_input:
            break

######################################################################################################################

2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк,
количества слов в каждой строке.

try:
    my_file = open("my_file.txt", "r", encoding="UTF-8")
    content = my_file.readlines()
    print(f'Количество строк в файле: {len(content)}')
    for i in range(len(content)):
        print(f'Колиичество символов строки {i + 1}: {len(content[i])}')
    my_file.close()

except FileNotFoundError:
    print("Такого файла не существует!")

######################################################################################################################

3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов
(не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
Выполнить подсчет средней величины дохода сотрудников.
Пример файла:

Иванов 23543.12
Петров 13749.32


with open("workers.txt", encoding="UTF-8") as workers:
    employe = {}
    i = 0
    salary = 0
    for line in workers:
        key, value = line.split()
        i += 1
        if float(value) < 20000:
            employe[key] = value
        salary += float(value)
    for k in employe.items():
        print(f'Сотрудник с зароботной платой меньше 20000 р.:{k}')
    print("\n"f'Средняя зароботная плата сотрудников: {salary / i} руб.')


######################################################################################################################

4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. При этом английские
числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.

with open("translate.txt", "r", encoding="UTF-8") as file1:
    with open("output.txt", "w", encoding="UTF-8") as file2:
        rusian = {'One': 'Один', 'Two': 'Два', 'Three': 'Три', 'Four': 'Четыре'}
        out_file = []
        for line in file1:
            line = line.split(' ', 1)
            out_file.append(rusian[line[0]] + '  ' + line[1])
        print(out_file)
        file2.writelines(out_file)


######################################################################################################################

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.


user_input = input("Ввеите числа через пробел: ").split()
with open("user_output.txt", "w", encoding="UTF-8") as user_output:
    user_output.writelines(str(user_input))
    user_output.close()
    with open("user_output.txt", "r", encoding="UTF8") as input_text:
        s = input_text.readlines()
        print(len(s))

######################################################################################################################


# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие
# лекционных, практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого предмета
# не обязательно были все типы занятий. Сформировать словарь, содержащий название предмета и общее количество
# занятий по нему. Вывести словарь на экран.
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

fin_dict = {}
try:
    with open("list_of_lectures.txt", "r", encoding="UTF-8") as f_input:
        for line in f_input:
            key, values = line.split(" ", 1)
            values = values.replace("(", " ").replace(")", " ").split(" ")
            values = sum(map(int, [i for i in values if '0' <= i <= '9']))
            fin_dict[key] = values
        print(fin_dict)
except FileNotFoundError:
    print('Файл не найден или не существует')
#
# ######################################################################################################################
#
# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка должна содержать данные
# о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
#
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма
# получила убытки, в расчет средней прибыли ее не включать. Далее реализовать список. Он должен содержать словарь с
# фирмами и их прибылями, а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь
# (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
#
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
#
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
#
# Подсказка: использовать менеджер контекста.

import json
from statistics import mean

with open("firm_list.txt", "r", encoding="UTF-8") as json_file:
    with open("output_stats.txt", "w", encoding="UTF-8") as output_stats:

        profit = {}
        loses = {}
        for line in json_file:
            name, legal_entity, prise, costs = line.split()
            if int(prise) > int(costs):
                prof_value = int(prise) - int(costs)
                profit[name] = prof_value

            elif int(prise) < int(costs):
                los_value = int(costs) - int(prise)
                loses[name] = los_value

        result = [profit, {'average_profit': mean(profit.values())}]
        result_2 = [loses, {'average_lose': mean(loses.values())}]

        print(f'Фирмы показавшие прибыль {result}')
        print(f'Фирмы показавшие убыток {result_2}')

        json.dump(result, output_stats)


########################################################################################################################
