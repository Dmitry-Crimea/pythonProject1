########################################################################################################################
# 1. Реализовать класс «Дата», функция-конструктор которого должна принимать дату в виде строки формата «день-месяц-год»
# В рамках класса реализовать два метода. Первый, с декоратором @classmethod, должен извлекать число, месяц, год и
# преобразовывать их тип к типу «Число». Второй, с декоратором @staticmethod, должен проводить валидацию числа, месяца и
# года (например, месяц — от 1 до 12). Проверить работу полученной структуры на реальных данных.

import datetime
# import time
class Date:
    def __init__(self, date):
        self.date = str(date)

    @classmethod
    def int_date(cls, date):
        my_date = []
        my_date = [int(x) for x in date.split() if x!= '-']
        return my_date

    @staticmethod
    def validation(day, month, year):
        try:
            date_time = datetime.datetime(day, month, year)
            return f'Valid date'
        except ValueError:
            return f'Wrong date!'

print(Date.int_date('20 - 10 - 2022'))
print(Date.validation(2022,  11,  22))

########################################################################################################################

# 2. Создайте собственный класс-исключение, обрабатывающий ситуацию деления на ноль. Проверьте его работу на данных,
# вводимых пользователем. При вводе пользователем нуля в качестве делителя программа должна корректно обработать эту
# ситуацию и не завершиться с ошибкой.


